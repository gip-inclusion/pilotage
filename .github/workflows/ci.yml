name: 🔮 CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: {}
    env:
      DJANGO_SETTINGS_MODULE: config.settings.test
      VIRTUAL_ENV: .venv
      PGPORT: 5432
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
      cancel-in-progress: true
    services:
      postgres:
        # Docker Hub image
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: 🐘 Non-durable PostgreSQL
      run: |
        psql <<SQL
          ALTER SYSTEM SET fsync=off;
          ALTER SYSTEM SET synchronous_commit=off;
          ALTER SYSTEM SET full_page_writes=off;
        SQL
        docker kill --signal=SIGHUP ${{ job.services.postgres.id }}
      env:
        PGPASSWORD: password
        PGHOST: localhost
        PGUSER: postgres
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: 💾 Create a database to check migrations
      run: |
        psql <<SQL
            CREATE DATABASE pilotage_django;
        SQL
      env:
        PGPASSWORD: password
        PGHOST: localhost
        PGUSER: postgres
    - name: ⏬ Install uv
      uses: astral-sh/setup-uv@d4b2f3b6ecc6e67c4457f6d3e41ec42d3d0fcb86 # v5.4.2
      with:
        enable-cache: true
        cache-dependency-glob: "requirements/test.txt"
    - name: 📥 Install Python dependencies
      run: |
        make venv
        echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH
    - name: ✨ Verify quality
      run: make quality
    - name: 🤹 Django tests
      run: make test
